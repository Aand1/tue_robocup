language:
  - cpp
  - python
python:
  - "2.7"
compiler:
  - gcc
env:
  - ROS_DISTRO=hydro

notifications:
  - email: false
sudo: required

before_install:
  - CI_SOURCE_PATH=$(pwd)
  - REPOSITORY_NAME=${PWD##*/}
  - echo "Testing branch $TRAVIS_BRANCH of $REPOSITORY_NAME"
  - sudo pip install codecov
  - sudo pip install xhtml2pdf # TODO: Install requirements.txt with tue-get install

install:
  - source <(wget -O- https://raw.githubusercontent.com/tue-robotics/tue-env/master/installer/scripts/bootstrap-ros-$ROS_DISTRO)
  - tue-get install ros-challenge_test ros-challenge_manipulation ros-challenge_rips ros-test_tools # ros-challenge_navigation ros-challenge_person_recognition ros-challenge_robonurse ros-challenge_speech_recognition ros-challenge_manipulation
  - source ~/.tue/setup.bash # source all target setup files
  - cd

before_script:
  - cd ${TUE_SYSTEM_DIR}/src
  - export ROBOT_ENV=robotics_testlabs
  # Link the repo we are testing to the new workspace
  - rm -rf $REPOSITORY_NAME
  - ln -s $CI_SOURCE_PATH .
  - ls -l
  - cd .. # go to the catkin workspace

script:
  - pushd .
  - echo $ROS_PACKAGE_PATH
  - rospack list
  - cd src
  - pwd
  - find . -maxdepth 3 -type d -exec ls -l "{}" \;
  - rm -rf /home/travis/build/tue-robotics/tue_robocup
  - find . -maxdepth 3 -type d -exec ls -l "{}" \;
  - roscd challenge_test
  - pwd
  - cd ..
  - ls
  - popd
  - catkin_make -j2
  - catkin_make install   # installing the package
  - catkin_make tests     # build the tests
  - roscore >> /dev/null & #Set up a roscore to run the tests with
  - catkin_make run_tests # and run them
  - rosrun tf_server tf_server >> /dev/null & #Robot keeps waiting for this
  - 
  - cd #Go to home dir
  - 
  - pushd .
  - roscd test_tools
  - rosrun test_tools open_door.sh  >> /dev/null & #Make it look that the door is open so we can drive in. Its a bit hacky
  - popd
  -
  - rosrun challenge_test test.py mockbot
  -
  - rosrun challenge_manipulation manipulation.py mockbot
  - 
  - #rosrun challenge_navigation challenge_navigation.py mockbot
  - 
  - #rosrun challenge_person_recognition person_recognition.py mockbot
  - 
  - pushd . 
  - roscd test_tools
  - rosrun test_tools open_door.sh  > open_door_log.txt & #Make it look that the door is open so we can drive in.
  - sleep 5
  - cat open_door_log.txt
  - popd 
  - 
  - rosrun challenge_rips rips.py mockbot
  - 
  - #rosrun challenge_robonurse challenge_robonurse.py mockbot
  - 
  - #rosrun challenge_speech_recognition 1_direct_speech_recognition.py mockbot
  - 
  - #rosrun challenge_speech_recognition 2_indirect_speech_recognition.py mockbot
  - killall roscore #And kill the roscore afterwards
  - 
  - wget http://imgur.com/tools/imgurbash.sh
  - chmod +x imgurbash.sh
  - ./imgurbash.sh *_designators.png
